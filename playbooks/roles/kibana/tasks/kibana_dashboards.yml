---

######################################################
############## Setup Kibana dashboards ###############
######################################################

#- name: Download ROCK Dashboards
#  get_url:
#    url: "{{ rock_dashboards_url }}"
#    dest: "{{ rock_cache_dir }}/{{ rock_dashboards_filename }}"
#    mode: 0644
#  when: rock_online_install

# Opens the archive
#- name: Extract ROCK Dashboards
#  unarchive:
#    src: "{{ rock_cache_dir }}/{{ rock_dashboards_filename }}"
#    dest: "{{ rocknsm_dir }}"
#    owner: root
#    group: root
#    creates: "{{ rocknsm_dir }}/rock-dashboards-{{ rock_dashboards_branch }}"
#    remote_src: yes

#- name: Check current Kibana config
#  uri:
#    method: "GET"
#    url: "{{ es_url_external }}/.kibana/config/{{ kibana_info.version }}/_source"
#    return_content: true
#  register: kibana_cfg
#  changed_when: false
#  until: kibana_cfg.status == 200
#  retries: 10
#  delay: 3

#- name: Store Kibana config dict
#  set_fact:
#    kibana_config: "{{ kibana_cfg.json }}"

- name: 'Create kibana dashboard directory'
  file:
    path: "{{ kibana_dashboard_dir }}"
    owner: 1000
    group: 1000
    mode: 0754
    state: directory

- name: 'Copy dashboard directory'
  copy:
    src: 'dashboards'
    dest: "{{ kibana_dashboard_dir }}/dashboards"
    mode: 0754
    owner: root
    group: root

- name: Configure Kibana templates
  uri:
    method: PUT
    url: {{ es_url_external }}/_template/kibana-config
    body: >
      { "order" : 0, "template" : ".kibana",
        "settings" :
          { "index.number_of_replicas" : "0",
            "index.number_of_shards" : "1" },
        "mappings" : { }, "aliases" : { } }
    status_code: 200,201

#- name: Push Kibana dashboard config
#  command: >
#    /opt/rocknsm/rock-dashboards-{{ rock_dashboards_branch }}/load.sh
#      -url {{ es_url }}
#  args:
#    chdir: /opt/rocknsm/rock-dashboards-{{ rock_dashboards_branch }}/
#  when: (kibana_config.rock_config is undefined or kibana_config.rock_config != rock_dashboards_version)

- name: Push Kibana dashboard config
  command: {{ kibana_dashboard_dir }}/load.sh -url {{ es_url }}
  chdir: {{ kibana_dashboard_dir }}
  # TODO: This needs to be conditioned
  # when: (kibana_config.rock_config is undefined or kibana_config.rock_config != rock_dashboards_version)

- name: Store default Kibana index to Bro
  set_fact:
    kibana_config: "{{ kibana_config | combine({'defaultIndex': 'bro-*' })}}"
  when: included_components.bro.enabled

#- name: Store default Kibana index to Suricata
#  set_fact:
#    kibana_config: "{{ kibana_config | combine({'defaultIndex': 'suricata-*' })}}"
#  when: included_components.suricata.enabled and not included_components.bro.enabled

#- name: Update Kibana config dict w/ rock_config version
#  set_fact:
#    kibana_config: "{{ kibana_config | combine({'rock_config': rock_dashboards_version }) }}"

#- name: Push Kibana settings for index and rock_version
#  uri:
#    method: PUT
#    url: "{{ es_url }}/.kibana/config/{{ kibana_info.version }}"
#    body: "{{ kibana_config }}"
#    body_format: "json"
#    status_code: 200,201

...
