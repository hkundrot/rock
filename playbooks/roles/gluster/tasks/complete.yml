---
- name: Deploy Topology
  shell: "heketi-cli topology load --json {{ gluster_dir }}/topology.json"

- name: Setup Storage
  shell: "heketi-cli setup-openshift-heketi-storage"
  register: storage_setup_result

- name: Move Storage File
  shell: "mv /root/heketi-storage.json {{ gluster_dir }}/heketi-storage.json"
  when: storage_setup_result.rc == 0

- name: Create Heketi Storage
  shell: |
    kubectl create -f {{ gluster_dir }}/heketi-storage.json
    while [ $(kubectl get job heketi-storage-copy-job | grep heketi | awk '{print $3}') == '0' ]; do
      echo -n .;
      sleep 1;
    done;

- name: Cleanup Heketi Bootstrap
  command: "kubectl delete all,service,jobs,deployment,secret --selector deploy-heketi"

- name: Deploy Heketi
  command: 'kubectl create -f {{ gluster_dir }}/heketi-deployment.json'

- name: Get Cluster IP
  shell: |
    HEKETI_IP='';
    while [ -z $HEKETI_IP ]; do
      HEKETI_IP=$(kubectl get svc | grep -E '^heketi\s+' | awk '{ print $3}');
      sleep 1;
    done;
    echo -n $(kubectl get svc | grep -E '^heketi\s+' | awk '{ print $3}')
  register: heketi_ip

- name: Set Cluster IP in Storage Class
  replace:
    path: '{{ gluster_dir }}/storage-class.yml'
    regexp: 'heketi_cluster_ip'
    replace: '{{ heketi_ip.stdout }}'
  #command: "sed -i 's/heketi_cluster_ip/{{ heketi_ip.stdout }}/g' {{ gluster_dir }}/storage-class.yml"

- name: Deploy Storage Class
  command: "kubectl create -f {{ gluster_dir }}/storage-class.yml"